### Log(Prior Densities)
alpha.prior <- dnormv(x=alpha, mean=0, var=1000, log=TRUE)
alpha.prior
beta.prior <- dnorm(x=beta, mean=0, sd=sigma, log=TRUE)
beta.prior
sigma.prior <- dhalfcauchy(x=sigma, scale=25, log=TRUE)
sigma.prior
n1 <- 60     # Number of females
n2 <- 40     # Number of males
mu1 <- 105   # Population mean for females
mu2 <- 77.5  # Population mean for males
sigma1 <- 3.5 # Population SD for females
sigma2 <- 2.5 # Population SD for males
n <- n1+n2    # Total sample size
y1 <- rnorm(n1, mean= mu1, sd=sigma1) # Data for females
y2 <-rnorm(n2, mean=mu2, sd=sigma2)  # Data for males
y <- c(y1, y2)   # Aggregate both data sets
x <- rep(c(0,1), c(n1, n2))  # Indicator for male
##  2.4. Initial Values~~~~~~~~~~~~~~
parm <- Initial.Values <- c(mu1=1,mu2=9, sigma1=3, sigma2=8)
#
parm.names <- as.parm.names(Initial.Values)
mon.names <- c("LP00", 'mu1-mu2')
Data <- MyData <- list(N=n, mon.names=mon.names,
parm.names=parm.names, x=x, y1=y1,y2=y2)
Data <- MyData <- list(N=n, mon.names=mon.names,
parm.names=parm.names,y1=y1,y2=y2)
### Parameters
mu1 <- parm[1]
mu2 <- parm[2]
mu1_mu2 <- mu1-mu2
sigma1 <- parm[3]
sigma2 <- parm[4]
yhat <- c(rnorm(length(y1), mu1, sigma1),rnorm(length(y2),mu2, sigma2))
### Log(Prior Densities)
mu1.prior <- dnorm(x=mu1, mean=0, sd=sigma1, log=TRUE)
mu2.prior <- dnorm(x=mu2, mean=0, sd=sigma2, log=TRUE)
sigma1.prior <- dhalfcauchy(x=sigma1, scale=25, log=TRUE)
sigma2.prior <- dhalfcauchy(x=sigma2, scale=25, log=TRUE)
mu1.prior
mu2.prior
sigma1.prior
sigma2.prior
sum(dnorm(x=Data$y1, mean=mu1, sd=sigma1, log=F))
sum(dnorm(x=Data$y1, mean=mu1, sd=sigma1, log=TRUE))
sum(dnorm(x=Data$y2, mean=mu2, sd=sigma2, log=TRUE))
sigma2.prior
sigma1.prior
parm <- Initial.Values <- c(mu1=1,mu2=9, sigma1=30, sigma2=80)
### Parameters
mu1 <- parm[1]
mu2 <- parm[2]
mu1_mu2 <- mu1-mu2
sigma1 <- parm[3]
sigma2 <- parm[4]
yhat <- c(rnorm(length(y1), mu1, sigma1),rnorm(length(y2),mu2, sigma2))
### Log(Prior Densities)
mu1.prior <- dnorm(x=mu1, mean=0, sd=sigma1, log=TRUE)
mu2.prior <- dnorm(x=mu2, mean=0, sd=sigma2, log=TRUE)
sigma1.prior <- dhalfcauchy(x=sigma1, scale=25, log=TRUE)
sigma2.prior <- dhalfcauchy(x=sigma2, scale=25, log=TRUE)
#
sigma1.prior
sigma2.prior
LL1
sum(dnorm(x=Data$y1, mean=mu1, sd=sigma1, log=TRUE))
##  2.3. Model    ~~~~~~~~~~~~~~~~~
Model <- function(parm, Data)
{
### Parameters
mu1 <- parm[1]
mu2 <- parm[2]
mu1_mu2 <- mu1-mu2
sigma1 <- parm[3]
sigma2 <- parm[4]
yhat <- c(rnorm(length(y1), mu1, sigma1),rnorm(length(y2),mu2, sigma2))
### Log(Prior Densities)
mu1.prior <- dnorm(x=mu1, mean=0, sd=sigma1, log=TRUE)
mu2.prior <- dnorm(x=mu2, mean=0, sd=sigma2, log=TRUE)
sigma1.prior <- dhalfcauchy(x=sigma1, scale=25, log=TRUE)
sigma2.prior <- dhalfcauchy(x=sigma2, scale=25, log=TRUE)
#
### Log-Likelihood
LL1 <- sum(dnorm(x=Data$y1, mean=mu1, sd=sigma1, log=TRUE))
LL2 <- sum(dnorm(x=Data$y2, mean=mu2, sd=sigma2, log=TRUE))
### Log-Posterior
LP1 <- LL1 + mu1.prior + sigma1.prior
LP2 <- LL2  + mu2.prior + sigma2.prior
LP_1.2 <- LP1+LP2
#
Modelout <- list(LP=LP_1.2, Dev=-2*(LL1+LL2),
Monitor=c(LP_1.2, mu1_mu2),
yhat= yhat, parm=parm)
return(Modelout)
}
## 2.5 MCMC ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# MCMC settings
ni <- 8000      # Number of draws from posterior (for each chain)
st <- 4000       # Steps when status message should be given
nt <-100      	# Thinning rate #  Abate autocorrelation
# Run LaplacesDemon
out <- LaplacesDemon(Model, Data=MyData, Initial.Values, Iterations=ni, Status=st, Thinning=nt)
# Have a look at some summary statistics
out
## 2.5 MCMC ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# MCMC settings
ni <- 80000      # Number of draws from posterior (for each chain)
st <- 4000       # Steps when status message should be given
nt <-100      	# Thinning rate #  Abate autocorrelation
# Run LaplacesDemon
out <- LaplacesDemon(Model, Data=MyData, Initial.Values, Iterations=ni, Status=st, Thinning=nt)
# Have a look at some summary statistics
out
n1 <- 6000     # Number of females
n2 <- 4000     # Number of males
mu1 <- 105   # Population mean for females
mu2 <- 77.5  # Population mean for males
sigma1 <- 3.5 # Population SD for females
sigma2 <- 2.5 # Population SD for males
n <- n1+n2    # Total sample size
y1 <- rnorm(n1, mean= mu1, sd=sigma1) # Data for females
y2 <-rnorm(n2, mean=mu2, sd=sigma2)  # Data for males
y <- c(y1, y2)   # Aggregate both data sets
x <- rep(c(0,1), c(n1, n2))  # Indicator for male
#
boxplot(y ~ x, col="grey", xlab="Male", ylab="Wingspan (cm)", las=1)
#
t.test(y ~ x)
#
### bayesian anlysis ~~~~~~~~~~~~#########################
require(LaplacesDemon)
##  2.4. Initial Values~~~~~~~~~~~~~~
parm <- Initial.Values <- c(mu1=1,mu2=9, sigma1=30, sigma2=80)
#
parm.names <- as.parm.names(Initial.Values)
mon.names <- c("LP00", 'mu1-mu2')
Data <- MyData <- list(N=n, mon.names=mon.names,
parm.names=parm.names,y1=y1,y2=y2)
##  2.3. Model    ~~~~~~~~~~~~~~~~~
Model <- function(parm, Data)
{
### Parameters
mu1 <- parm[1]
mu2 <- parm[2]
mu1_mu2 <- mu1-mu2
sigma1 <- parm[3]
sigma2 <- parm[4]
yhat <- c(rnorm(length(y1), mu1, sigma1),rnorm(length(y2),mu2, sigma2))
### Log(Prior Densities)
mu1.prior <- dnorm(x=mu1, mean=0, sd=sigma1, log=TRUE)
mu2.prior <- dnorm(x=mu2, mean=0, sd=sigma2, log=TRUE)
sigma1.prior <- dhalfcauchy(x=sigma1, scale=25, log=TRUE)
sigma2.prior <- dhalfcauchy(x=sigma2, scale=25, log=TRUE)
#
### Log-Likelihood
LL1 <- sum(dnorm(x=Data$y1, mean=mu1, sd=sigma1, log=TRUE))
LL2 <- sum(dnorm(x=Data$y2, mean=mu2, sd=sigma2, log=TRUE))
### Log-Posterior
LP1 <- LL1 + mu1.prior + sigma1.prior
LP2 <- LL2  + mu2.prior + sigma2.prior
LP_1.2 <- LP1+LP2
#
Modelout <- list(LP=LP_1.2, Dev=-2*(LL1+LL2),
Monitor=c(LP_1.2, mu1_mu2),
yhat= yhat, parm=parm)
return(Modelout)
}
## 2.5 MCMC ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# MCMC settings
ni <- 80000      # Number of draws from posterior (for each chain)
st <- 4000       # Steps when status message should be given
nt <-100      	# Thinning rate #  Abate autocorrelation
# Run LaplacesDemon
out <- LaplacesDemon(Model, Data=MyData, Initial.Values, Iterations=ni, Status=st, Thinning=nt)
# Have a look at some summary statistics
out
plot(out, BurnIn=100, Data, PDF=F)
# MCMC settings
ni <- 20000      # Number of draws from posterior (for each chain)
st <- 4000       # Steps when status message should be given
nt <-50      	# Thinning rate #  Abate autocorrelation
# Run LaplacesDemon
out <- LaplacesDemon(Model, Data=MyData, Initial.Values, Iterations=ni, Status=st, Thinning=nt)
# Have a look at some summary statistics
out
## 2.5 MCMC ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# MCMC settings
ni <- 1000      # Number of draws from posterior (for each chain)
st <- 200      # Steps when status message should be given
nt <-50      	# Thinning rate #  Abate autocorrelation
# Run LaplacesDemon
out <- LaplacesDemon(Model, Data=MyData, Initial.Values, Iterations=ni, Status=st, Thinning=nt)
# Have a look at some summary statistics
out
## 2.5 MCMC ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# MCMC settings
ni <- 5000      # Number of draws from posterior (for each chain)
st <- 200      # Steps when status message should be given
nt <-50      	# Thinning rate #  Abate autocorrelation
# Run LaplacesDemon
out <- LaplacesDemon(Model, Data=MyData, Initial.Values, Iterations=ni, Status=st, Thinning=nt)
# Have a look at some summary statistics
out
## 2.5 MCMC ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# MCMC settings
ni <- 10000      # Number of draws from posterior (for each chain)
st <- 500      # Steps when status message should be given
nt <-50      	# Thinning rate #  Abate autocorrelation
# Run LaplacesDemon
out <- LaplacesDemon(Model, Data=MyData, Initial.Values, Iterations=ni, Status=st, Thinning=nt)
# Have a look at some summary statistics
out
## 2.5 MCMC ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# MCMC settings
ni <- 20000      # Number of draws from posterior (for each chain)
st <- 500      # Steps when status message should be given
nt <-20      	# Thinning rate #  Abate autocorrelation
# Run LaplacesDemon
out <- LaplacesDemon(Model, Data=MyData, Initial.Values, Iterations=ni, Status=st, Thinning=nt)
# Have a look at some summary statistics
out
plot(out, BurnIn=20, Data, PDF=F)
# alpha= 105, beta= 27.5, sigma= 1.75
# Plotting output
plot(out, BurnIn=200, Data, PDF=F)
# alpha= 105, beta= 27.5, sigma= 1.75
# Plotting output
plot(out, BurnIn=10, Data, PDF=F)
# alpha= 105, beta= 27.5, sigma= 1.75
# Plotting output
plot(out, BurnIn=30, Data, PDF=F)
# alpha= 105, beta= 27.5, sigma= 1.75
# Plotting output
plot(out, BurnIn=50, Data, PDF=F)
# alpha= 105, beta= 27.5, sigma= 1.75
# Plotting output
plot(out, BurnIn=100, Data, PDF=F)
plot(out, BurnIn=100, Data, PDF=F)
# mu1= 105, mu2= 75.5, sigma1= 3.5, sigma1= 2.5
# Plotting output
plot(out, BurnIn=150, Data, PDF=F)
# mu1= 105, mu2= 75.5, sigma1= 3.5, sigma1= 2.5
# Plotting output
plot(out, BurnIn=200, Data, PDF=F)
# Plotting output
plot(out, BurnIn=200, Data, PDF=F)
#
out
## 2.5 MCMC ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# MCMC settings
ni <- 20000      # Number of draws from posterior (for each chain)
st <- 500      # Steps when status message should be given
nt <-200      	# Thinning rate #  Abate autocorrelation
# Run LaplacesDemon
out <- LaplacesDemon(Model, Data=MyData, Initial.Values, Iterations=ni, Status=st, Thinning=nt)
# Have a look at some summary statistics
out
n1 <- 6000     # Number of females
n2 <- 4000     # Number of males
mu1 <- 105   # Population mean for females
mu2 <- 117.5  # Population mean for males
sigma1 <- 3.5 # Population SD for females
sigma2 <- 12.5 # Population SD for males
n <- n1+n2    # Total sample size
y1 <- rnorm(n1, mean= mu1, sd=sigma1) # Data for females
y2 <-rnorm(n2, mean=mu2, sd=sigma2)  # Data for males
y <- c(y1, y2)   # Aggregate both data sets
x <- rep(c(0,1), c(n1, n2))  # Indicator for male
#
boxplot(y ~ x, col="grey", xlab="Male", ylab="Wingspan (cm)", las=1)
#
t.test(y ~ x)
#
### bayesian anlysis ~~~~~~~~~~~~#########################
require(LaplacesDemon)
##  2.4. Initial Values~~~~~~~~~~~~~~
parm <- Initial.Values <- c(mu1=1,mu2=9, sigma1=30, sigma2=80)
#
parm.names <- as.parm.names(Initial.Values)
mon.names <- c("LP00", 'mu1-mu2')
Data <- MyData <- list(N=n, mon.names=mon.names,
parm.names=parm.names,y1=y1,y2=y2)
##  2.3. Model    ~~~~~~~~~~~~~~~~~
Model <- function(parm, Data)
{
### Parameters
mu1 <- parm[1]
mu2 <- parm[2]
mu1_mu2 <- mu1-mu2
sigma1 <- parm[3]
sigma2 <- parm[4]
yhat <- c(rnorm(length(y1), mu1, sigma1),rnorm(length(y2),mu2, sigma2))
### Log(Prior Densities)
mu1.prior <- dnorm(x=mu1, mean=0, sd=sigma1, log=TRUE)
mu2.prior <- dnorm(x=mu2, mean=0, sd=sigma2, log=TRUE)
sigma1.prior <- dhalfcauchy(x=sigma1, scale=25, log=TRUE)
sigma2.prior <- dhalfcauchy(x=sigma2, scale=25, log=TRUE)
#
### Log-Likelihood
LL1 <- sum(dnorm(x=Data$y1, mean=mu1, sd=sigma1, log=TRUE))
LL2 <- sum(dnorm(x=Data$y2, mean=mu2, sd=sigma2, log=TRUE))
### Log-Posterior
LP1 <- LL1 + mu1.prior + sigma1.prior
LP2 <- LL2  + mu2.prior + sigma2.prior
LP_1.2 <- LP1+LP2
#
Modelout <- list(LP=LP_1.2, Dev=-2*(LL1+LL2),
Monitor=c(LP_1.2, mu1_mu2),
yhat= yhat, parm=parm)
return(Modelout)
}
## 2.5 MCMC ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# MCMC settings
ni <- 20000      # Number of draws from posterior (for each chain)
st <- 500      # Steps when status message should be given
nt <-200      	# Thinning rate #  Abate autocorrelation
# Run LaplacesDemon
out <- LaplacesDemon(Model, Data=MyData, Initial.Values, Iterations=ni, Status=st, Thinning=nt)
# Have a look at some summary statistics
out
n1 <- 6000     # Number of females
n2 <- 4000     # Number of males
mu1 <- 105   # Population mean for females
mu2 <- 110.5  # Population mean for males
sigma1 <- 8.5 # Population SD for females
sigma2 <- 12.5 # Population SD for males
n <- n1+n2    # Total sample size
y1 <- rnorm(n1, mean= mu1, sd=sigma1) # Data for females
y2 <-rnorm(n2, mean=mu2, sd=sigma2)  # Data for males
y <- c(y1, y2)   # Aggregate both data sets
x <- rep(c(0,1), c(n1, n2))  # Indicator for male
#
boxplot(y ~ x, col="grey", xlab="Male", ylab="Wingspan (cm)", las=1)
#
t.test(y ~ x)
#
### bayesian anlysis ~~~~~~~~~~~~#########################
require(LaplacesDemon)
##  2.4. Initial Values~~~~~~~~~~~~~~
parm <- Initial.Values <- c(mu1=1,mu2=9, sigma1=30, sigma2=80)
#
parm.names <- as.parm.names(Initial.Values)
mon.names <- c("LP00", 'mu1-mu2')
Data <- MyData <- list(N=n, mon.names=mon.names,
parm.names=parm.names,y1=y1,y2=y2)
##  2.3. Model    ~~~~~~~~~~~~~~~~~
Model <- function(parm, Data)
{
### Parameters
mu1 <- parm[1]
mu2 <- parm[2]
mu1_mu2 <- mu1-mu2
sigma1 <- parm[3]
sigma2 <- parm[4]
yhat <- c(rnorm(length(y1), mu1, sigma1),rnorm(length(y2),mu2, sigma2))
### Log(Prior Densities)
mu1.prior <- dnorm(x=mu1, mean=0, sd=sigma1, log=TRUE)
mu2.prior <- dnorm(x=mu2, mean=0, sd=sigma2, log=TRUE)
sigma1.prior <- dhalfcauchy(x=sigma1, scale=25, log=TRUE)
sigma2.prior <- dhalfcauchy(x=sigma2, scale=25, log=TRUE)
#
### Log-Likelihood
LL1 <- sum(dnorm(x=Data$y1, mean=mu1, sd=sigma1, log=TRUE))
LL2 <- sum(dnorm(x=Data$y2, mean=mu2, sd=sigma2, log=TRUE))
### Log-Posterior
LP1 <- LL1 + mu1.prior + sigma1.prior
LP2 <- LL2  + mu2.prior + sigma2.prior
LP_1.2 <- LP1+LP2
#
Modelout <- list(LP=LP_1.2, Dev=-2*(LL1+LL2),
Monitor=c(LP_1.2, mu1_mu2),
yhat= yhat, parm=parm)
return(Modelout)
}
## 2.5 MCMC ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# MCMC settings
ni <- 20000      # Number of draws from posterior (for each chain)
st <- 500      # Steps when status message should be given
nt <-200      	# Thinning rate #  Abate autocorrelation
# Run LaplacesDemon
out <- LaplacesDemon(Model, Data=MyData, Initial.Values, Iterations=ni, Status=st, Thinning=nt)
# Have a look at some summary statistics
out
<<7.2 T-test with unequal variances>>=
n1 <- 6000     # Number of females
n2 <- 4000     # Number of males
mu1 <- 105   # Population mean for females
mu2 <- 110.5  # Population mean for males
sigma1 <- 28.5 # Population SD for females
sigma2 <- 32.5 # Population SD for males
n <- n1+n2    # Total sample size
y1 <- rnorm(n1, mean= mu1, sd=sigma1) # Data for females
y2 <-rnorm(n2, mean=mu2, sd=sigma2)  # Data for males
y <- c(y1, y2)   # Aggregate both data sets
x <- rep(c(0,1), c(n1, n2))  # Indicator for male
#
boxplot(y ~ x, col="grey", xlab="Male", ylab="Wingspan (cm)", las=1)
#
t.test(y ~ x)
#
### bayesian anlysis ~~~~~~~~~~~~#########################
require(LaplacesDemon)
##  2.4. Initial Values~~~~~~~~~~~~~~
parm <- Initial.Values <- c(mu1=1,mu2=9, sigma1=30, sigma2=80)
#
parm.names <- as.parm.names(Initial.Values)
mon.names <- c("LP00", 'mu1-mu2')
Data <- MyData <- list(N=n, mon.names=mon.names,
parm.names=parm.names,y1=y1,y2=y2)
##  2.3. Model    ~~~~~~~~~~~~~~~~~
Model <- function(parm, Data)
{
### Parameters
mu1 <- parm[1]
mu2 <- parm[2]
mu1_mu2 <- mu1-mu2
sigma1 <- parm[3]
sigma2 <- parm[4]
yhat <- c(rnorm(length(y1), mu1, sigma1),rnorm(length(y2),mu2, sigma2))
### Log(Prior Densities)
mu1.prior <- dnorm(x=mu1, mean=0, sd=sigma1, log=TRUE)
mu2.prior <- dnorm(x=mu2, mean=0, sd=sigma2, log=TRUE)
sigma1.prior <- dhalfcauchy(x=sigma1, scale=25, log=TRUE)
sigma2.prior <- dhalfcauchy(x=sigma2, scale=25, log=TRUE)
#
### Log-Likelihood
LL1 <- sum(dnorm(x=Data$y1, mean=mu1, sd=sigma1, log=TRUE))
LL2 <- sum(dnorm(x=Data$y2, mean=mu2, sd=sigma2, log=TRUE))
### Log-Posterior
LP1 <- LL1 + mu1.prior + sigma1.prior
LP2 <- LL2  + mu2.prior + sigma2.prior
LP_1.2 <- LP1+LP2
#
Modelout <- list(LP=LP_1.2, Dev=-2*(LL1+LL2),
Monitor=c(LP_1.2, mu1_mu2),
yhat= yhat, parm=parm)
return(Modelout)
}
## 2.5 MCMC ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# MCMC settings
ni <- 10000      # Number of draws from posterior (for each chain)
st <- 500
st <- 500      # Steps when status message should be given
nt <-60      	# Thinning rate #  Abate autocorrelation
# Run LaplacesDemon
out <- LaplacesDemon(Model, Data=MyData, Initial.Values, Iterations=ni, Status=st, Thinning=nt)
# Have a look at some summary statistics
out
#
n1 <- 6000     # Number of females
n2 <- 4000     # Number of males
mu1 <- 105   # Population mean for females
mu2 <- 110.5  # Population mean for males
sigma1 <- 208.5 # Population SD for females
sigma2 <- 302.5 # Population SD for males
n <- n1+n2    # Total sample size
y1 <- rnorm(n1, mean= mu1, sd=sigma1) # Data for females
y2 <-rnorm(n2, mean=mu2, sd=sigma2)  # Data for males
y <- c(y1, y2)   # Aggregate both data sets
x <- rep(c(0,1), c(n1, n2))  # Indicator for male
#
boxplot(y ~ x, col="grey", xlab="Male", ylab="Wingspan (cm)", las=1)
#
t.test(y ~ x)
#
### bayesian anlysis ~~~~~~~~~~~~#########################
require(LaplacesDemon)
##  2.4. Initial Values~~~~~~~~~~~~~~
parm <- Initial.Values <- c(mu1=1,mu2=9, sigma1=30, sigma2=80)
#
parm.names <- as.parm.names(Initial.Values)
mon.names <- c("LP00", 'mu1-mu2')
Data <- MyData <- list(N=n, mon.names=mon.names,
parm.names=parm.names,y1=y1,y2=y2)
##  2.3. Model    ~~~~~~~~~~~~~~~~~
Model <- function(parm, Data)
{
### Parameters
mu1 <- parm[1]
mu2 <- parm[2]
mu1_mu2 <- mu1-mu2
sigma1 <- parm[3]
sigma2 <- parm[4]
yhat <- c(rnorm(length(y1), mu1, sigma1),rnorm(length(y2),mu2, sigma2))
### Log(Prior Densities)
mu1.prior <- dnorm(x=mu1, mean=0, sd=sigma1, log=TRUE)
mu2.prior <- dnorm(x=mu2, mean=0, sd=sigma2, log=TRUE)
sigma1.prior <- dhalfcauchy(x=sigma1, scale=25, log=TRUE)
sigma2.prior <- dhalfcauchy(x=sigma2, scale=25, log=TRUE)
#
### Log-Likelihood
LL1 <- sum(dnorm(x=Data$y1, mean=mu1, sd=sigma1, log=TRUE))
LL2 <- sum(dnorm(x=Data$y2, mean=mu2, sd=sigma2, log=TRUE))
### Log-Posterior
LP1 <- LL1 + mu1.prior + sigma1.prior
LP2 <- LL2  + mu2.prior + sigma2.prior
LP_1.2 <- LP1+LP2
#
Modelout <- list(LP=LP_1.2, Dev=-2*(LL1+LL2),
Monitor=c(LP_1.2, mu1_mu2),
yhat= yhat, parm=parm)
return(Modelout)
}
## 2.5 MCMC ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# MCMC settings
ni <- 10000      # Number of draws from posterior (for each chain)
st <- 500      # Steps when status message should be given
nt <-60      	# Thinning rate #  Abate autocorrelation
# Run LaplacesDemon
out <- LaplacesDemon(Model, Data=MyData, Initial.Values, Iterations=ni, Status=st, Thinning=nt)
# Have a look at some summary statistics
out
